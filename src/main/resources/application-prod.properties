
# Database Configuration (Supabase PostgreSQL)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://aws-1-ap-southeast-1.pooler.supabase.com:6543/postgres?prepareThreshold=0&reWriteBatchedInserts=true}
spring.datasource.username=${DATABASE_USERNAME:postgres.zwxsnqknusevmctkymru}
spring.datasource.password=${DATABASE_PASSWORD:wPji5OWftYbmOvn4}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Configuration for ECS/Supabase
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:8}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=5000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=false
spring.flyway.ignore-migration-patterns=*:missing

# JWT Configuration
jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-for-production-must-be-very-long-and-secure}
jwt.access-token-expiration=${JWT_ACCESS_EXPIRATION:3600000}
jwt.refresh-token-expiration=${JWT_REFRESH_EXPIRATION:86400000}
jwt.issuer=${JWT_ISSUER:UIAR-Backend}
jwt.audience=${JWT_AUDIENCE:UIAR-App}

# Server Configuration for ECS
server.port=${PORT:8080}
server.shutdown=graceful
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024
server.tomcat.threads.max=${TOMCAT_MAX_THREADS:200}
server.tomcat.threads.min-spare=${TOMCAT_MIN_THREADS:10}
server.tomcat.accept-count=${TOMCAT_ACCEPT_COUNT:100}
server.tomcat.max-connections=${TOMCAT_MAX_CONNECTIONS:8192}

# Health Check Configuration for ECS
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.prometheus.metrics.export.enabled=true
management.server.port=${MANAGEMENT_PORT:8081}

# Logging Configuration for CloudWatch
logging.level.com.gridtokenx=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.file.name=${LOG_FILE:/app/logs/uiar-backend.log}

# AWS CloudWatch Logs Configuration
logging.config=classpath:logback-spring.xml

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=${CACHE_MAX_SIZE:1000},expireAfterWrite=${CACHE_EXPIRE:300s}

# ECS-specific Configuration
spring.jmx.enabled=false
spring.main.lazy-initialization=false
spring.application.name=uiar-backend

# AWS ECS Task Metadata
management.info.env.enabled=true
info.app.name=UIAR Backend
info.app.description=University Institutional Academic Repository Backend
info.app.version=@project.version@
info.aws.region=${AWS_REGION:ap-southeast-1}
info.aws.task-arn=${ECS_TASK_ARN:unknown}
info.aws.task-definition=${ECS_TASK_DEFINITION:unknown}
