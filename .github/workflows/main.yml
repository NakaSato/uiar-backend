name: Build & Publish to AWS ECR

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Make mvnw executable
      run: chmod +x ./mvnw
        
    - name: Run tests
      run: ./mvnw clean test
      
    - name: List test reports (debug)
      run: |
        echo "Checking for surefire reports..."
        ls -la target/surefire-reports/ || echo "No surefire-reports directory found"
        find target -name "TEST-*.xml" -type f || echo "No TEST-*.xml files found"
      
    - name: Build and package application
      run: ./mvnw clean compile package -DskipTests
      
    - name: Verify JAR file
      run: |
        echo "Checking for generated JAR files..."
        ls -la target/*.jar || echo "No JAR files found"
        
    - name: Configure AWS credentials
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}
        
    - name: Login to Amazon ECR
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Auto Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./init-scripts/git_update.sh -v major
      
    - name: Build and push Docker image to ECR
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY || 'uiar-backend' }}
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
